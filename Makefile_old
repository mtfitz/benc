TARGETS = benc

CXXLIBFILES = encoder decoder tree
CXXALLFILES = benc $(CXXLIBFILES)

BINDIR := ./bin
LIBDIR := ./lib
OBJDIR := ./build
INCDIR := ./include
SRCDIR := ./src

output := $(shell mkdir -p $(BINDIR) $(LIBDIR) $(OBJDIR))

OLIBFILES = $(patsubst %, $(OBJDIR)/%.o, $(CXXLIBFILES))
OALLFILES = $(patsubst %, $(OBJDIR)/%.o, $(CXXALLFILES))
EXEFILES = $(patsubst %, $(BINDIR)/%, $(TARGETS))
LIBFILES = $(LIBDIR)/libbenc.a

# dependency files
DFILES = $(patsubst %.o, %.d, $(OFILES))

CXXFLAGS = -I$(INCDIR) -MMD -std=c++17 -Wall -Werror
LDFLAGS = 

# make config
.DEFAULT_GOAL = all
.PRECIOUS: $(OALLFILES)
.PHONY: all clean

AR = ar
ARFLAGS = -rv

# build targets
all:
	@echo "RELEASE BUILD"
all: CXXFLAGS += -O3
all: $(EXEFILES) $(LIBFILES)

debug:
	@echo "DEBUG BUILD"
debug: CXXFLAGS += -DDEBUG -g
debug: $(EXEFILES) $(LIBFILES)

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@echo "[CXX] $< --> $@"
	@$(CXX) $< -o $@ -c $(CXXFLAGS)

$(LIBDIR)/%.a: $(OLIBFILES)
	@echo "Creating static library..."
	@$(AR) $(ARFLAGS) $@ $^

$(BINDIR)/%: $(OALLFILES)
	@echo "[LD] $^ --> $@"
	@$(CXX) $^ -o $@ $(LDFLAGS)

clean:
	@echo "Cleaning up..."
	@rm -rf $(BINDIR) $(LIBDIR) $(OBJDIR)

-include $(DFILES)